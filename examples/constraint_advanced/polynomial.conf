# Fitting 4th-order polynomial functions using a variety of constraints
# The constraint files contain constraints of various different syntactic forms to demonstrate the capabilities of PyBNF's constraint handling. 
# All constraints are consistent with the ground truth parameter values, so it should be possible to achieve a fit with a very low objective function.

model = polynomial.bngl : wt.con, wt.exp, mut.con


# Algorithm and objective function choice
fit_type = ss
objfunc = sos

output_dir = output/polynomial

initialization = lh
verbosity = 2
delete_old_files = 1

# Parameters
loguniform_var = a__FREE 0.01 10
uniform_var = b__FREE 0 10
normal_var = c__FREE 40 10
uniform_var = d__FREE 0 100
uniform_var = e__FREE 0 100
lognormal_var = f__FREE 1 0.5
loguniform_var = g__FREE 0.01 10

# Settings
population_size = 12
max_iterations = 1000
