# Fitting 4th-order polynomial functions using a variety of constraints
# The constraint files contain constraints of various different syntactic forms to demonstrate the capabilities of PyBNF's constraint handling. 
# All constraints are consistent with the ground truth parameter values, so it should be possible to achieve a fit with a very low objective function.

# In this config, the free parameters are bounded close to their ground truth values, so the fit should converge quickly. 

model = polynomial.bngl : wt.con, wt.exp, mut.con


# Algorithm and objective function choice
fit_type = ss
objfunc = sos

output_dir = output/easy_polynomial

initialization = lh
verbosity = 2
delete_old_files = 1

# Parameters
#uniform_var = a__FREE__ 0.2 0.4
#uniform_var = b__FREE__ 0.8 1.2
#uniform_var = c__FREE__ 22 32
#uniform_var = d__FREE__ 65 75
#uniform_var = e__FREE__ 17 25
#lognormal_var = f__FREE__ 4 6
#loguniform_var = g__FREE__ 0.7 0.9

uniform_var = a__FREE__ 0.2999 0.3001
uniform_var = b__FREE__ 0.9999 1.0001
uniform_var = c__FREE__ 26.9999 27.0001
uniform_var = d__FREE__ 69.9999 70.0001
uniform_var = e__FREE__ 20.9999 21.0001
uniform_var = f__FREE__ 4.9999 5.0001
uniform_var = g__FREE__  0.7999 0.8001

# Settings
population_size = 12
max_iterations = 1000
